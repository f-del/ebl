// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Containers tests CardsListByStatus CardsListByStatus with DONE 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(CardsList)
    filterBy={
      Object {
        "needsIndex": 2,
        "persona": "1",
      }
    }
    status={Symbol(DONE)}
    type="TASK"
  >
    <CardsList
      filterBy={
        Object {
          "needsIndex": 2,
          "persona": "1",
        }
      }
      list={Array []}
      status={Symbol(DONE)}
      type="TASK"
    />
  </Connect(CardsList)>
</Provider>
`;

exports[`Containers tests CardsListByStatus CardsListByStatus with Inprogress 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(CardsList)
    status={Symbol(INPROGRESS)}
    type="USER-STORY"
  >
    <CardsList
      list={Array []}
      status={Symbol(INPROGRESS)}
      type="USER-STORY"
    />
  </Connect(CardsList)>
</Provider>
`;

exports[`Containers tests CardsListByStatus CardsListByStatus with todo 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(CardsList)
    status={Symbol(TODO)}
    type="HYPOTHESIS"
  >
    <CardsList
      list={Array []}
      status={Symbol(TODO)}
      type="HYPOTHESIS"
    />
  </Connect(CardsList)>
</Provider>
`;
